suite: CSI Node DaemonSet

templates:
  - lxd-csi-node-daemonset.yaml

tests:
  - it: Expect default values when no configuration is applied
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: DaemonSet
      - equal:
          path: metadata.name
          value: lxd-csi-node
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 1
      - equal:
          path: spec.template.spec.priorityClassName
          value: system-node-critical
      - equal:
          path: spec.template.spec.serviceAccountName
          value: lxd-csi-node
      - isNotEmpty:
          path: spec.template.metadata.labels
      - notExists:
          path: metadata.annotations
      - notExists:
          path: spec.template.spec.affinity
      - notExists:
          path: spec.template.spec.tollerations
      - notExists:
          path: spec.template.metadata.annotations
      - notExists:
          path: spec.template.spec.nodeSelector
      - notExists:
          path: spec.template.spec.tollerations
      - notExists:
          path: spec.template.spec.imagePullSecrets
      - notExists:
          path: spec.template.spec.containers[*].resources
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2

  - it: Expect custom name and update strategy when configured
    set:
      node:
        name: custom-node
        strategy:
          type: OnDelete
    asserts:
      - equal:
          path: metadata.name
          value: custom-node
      - equal:
          path: spec.strategy.type
          value: OnDelete

  - it: Expect node selector when configured
    set:
      node:
        nodeSelector:
          kubernetes.io/os: linux
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/os: linux

  - it: Expect custom annotations when configured
    set:
      node:
        annotations:
          key1: value1
        podAnnotations:
          key2: value2
    asserts:
      - equal:
          path: metadata.annotations
          value:
            key1: value1
      - equal:
          path: spec.template.metadata.annotations
          value:
            key2: value2

  - it: Expect affinity and tollerations when configured
    set:
      node:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/os
                      operator: In
                      values:
                        - linux
        tolerations:
          - key: "node-role.kubernetes.io/worker"
            operator: "Exists"
            effect: "NoSchedule"
    asserts:
      - isNotEmpty:
          path: spect.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution
      - lengthEqual:
          path: spec.template.spec.tolerations
          count: 1

  - it: Expect resource limits and requests when configured
    set:
      node:
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 20m
            memory: 128Mi
        nodeDriverRegistrar:
          resources:
            limits:
              cpu: 100m
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name=="lxd-csi-node")].resources
          value:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 20m
              memory: 128Mi
      - equal:
          path: spec.template.spec.containers[?(@.name=="node-driver-registrar")].resources
          value:
            limits:
              cpu: 100m

  - it: Expect custom image when configured
    set:
      driver:
        image:
          repository: registry/image-repo
          tag: v1.2.3
          pullPolicy: Always
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name=="lxd-csi-node")].image
          value: registry/image-repo:v1.2.3
      - equal:
          path: spec.template.spec.containers[?(@.name=="lxd-csi-node")].imagePullPolicy
          value: Always

  - it: Expect image version to match Chart's AppVersion when not set
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name=="lxd-csi-node")].image
          value: ghcr.io/canonical/lxd-csi-driver:latest-edge

  - it: Expect namespace when Chart's release namespace is configured
    release:
      namespace: test-namespace
    asserts:
      - equal:
          path: metadata.namespace
          value: test-namespace
