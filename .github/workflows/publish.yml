name: Publish CSI image
on:
  push:
    branches:
      - main
    tags:
      - "v*"

permissions:
  contents: read

concurrency:
  group: publish-${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CONTAINER_REGISTRY: ghcr.io
  VERSION: ${{ github.ref_name == 'main' && 'latest-edge' || github.ref_name }}

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  e2e-tests:
    needs: tests
    uses: ./.github/workflows/e2e-tests.yml

  # Publish container image to GHCR if tests passed and we are on main branch.
  publish:
    runs-on: ubuntu-24.04
    needs: e2e-tests
    if: ${{ github.repository == 'canonical/lxd-csi-driver' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Validate release version
        shell: bash
        run: |
          set -e
          isSemver=false
          if [[ "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            isSemver=true
          fi

          if [[ "${VERSION}" != "latest-edge" && "${isSemver}" != "true" ]]; then
            echo "Error: Invalid version '${VERSION}'. It must be either 'latest-edge' or a semantic version prefixed with 'v' (e.g., v1.2.3)."
            exit 1
          fi

          echo "IS_SEMVER=${isSemver}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'go.mod'

      - name: Build image
        run: |
          set -e
          make build

      - name: Log in to the container registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}:latest-edge

      - name: Log in to the Helm registry
        run: |
          set -e
          echo "${{ github.token }}" \
            | helm registry login "${{ env.CONTAINER_REGISTRY }}" \
              --username "${{ github.actor }}" \
              --password-stdin

      - name: Publish new Chart
        run: |
          set -e
          chartVersion="${{ env.VERSION }}"

          if [ "${{ env.IS_SEMVER }}" != "true" ]; then
            # Prepend "v0.0.0-" to the version to satisfy Helm versioning requirements.
            chartVersion="v0.0.0-${chartVersion}"
          fi

          helm package charts --version "${chartVersion}" --app-version "${{ env.VERSION }}"
          helm push "lxd-csi-driver-${chartVersion}.tgz" "oci://${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/charts"
